[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "APIClient",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APIClient",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APIClient",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "APIClient",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "swagger_auto_schema",
        "importPath": "drf_yasg.utils",
        "description": "drf_yasg.utils",
        "isExtraImport": true,
        "detail": "drf_yasg.utils",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "OpenApiResponse",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "extend_schema",
        "importPath": "drf_spectacular.utils",
        "description": "drf_spectacular.utils",
        "isExtraImport": true,
        "detail": "drf_spectacular.utils",
        "documentation": {}
    },
    {
        "label": "SigninSerializer",
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "isExtraImport": true,
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "Item",
        "importPath": "items.models",
        "description": "items.models",
        "isExtraImport": true,
        "detail": "items.models",
        "documentation": {}
    },
    {
        "label": "Item",
        "importPath": "items.models",
        "description": "items.models",
        "isExtraImport": true,
        "detail": "items.models",
        "documentation": {}
    },
    {
        "label": "Item",
        "importPath": "items.models",
        "description": "items.models",
        "isExtraImport": true,
        "detail": "items.models",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "CreateItemSerializer",
        "importPath": "items.serializers",
        "description": "items.serializers",
        "isExtraImport": true,
        "detail": "items.serializers",
        "documentation": {}
    },
    {
        "label": "ListItemsSerializer",
        "importPath": "items.serializers",
        "description": "items.serializers",
        "isExtraImport": true,
        "detail": "items.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateItemSerializer",
        "importPath": "items.serializers",
        "description": "items.serializers",
        "isExtraImport": true,
        "detail": "items.serializers",
        "documentation": {}
    },
    {
        "label": "ListItemsSerializer",
        "importPath": "items.serializers",
        "description": "items.serializers",
        "isExtraImport": true,
        "detail": "items.serializers",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "orders.models",
        "description": "orders.models",
        "isExtraImport": true,
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "orders.models",
        "description": "orders.models",
        "isExtraImport": true,
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "orders.models",
        "description": "orders.models",
        "isExtraImport": true,
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "OrderViewSet",
        "importPath": "orders.views",
        "description": "orders.views",
        "isExtraImport": true,
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "CreateOrderSerializer",
        "importPath": "orders.serializers",
        "description": "orders.serializers",
        "isExtraImport": true,
        "detail": "orders.serializers",
        "documentation": {}
    },
    {
        "label": "ListItemsInOrderSerializer",
        "importPath": "orders.serializers",
        "description": "orders.serializers",
        "isExtraImport": true,
        "detail": "orders.serializers",
        "documentation": {}
    },
    {
        "label": "ListOrderSerializer",
        "importPath": "orders.serializers",
        "description": "orders.serializers",
        "isExtraImport": true,
        "detail": "orders.serializers",
        "documentation": {}
    },
    {
        "label": "OpenApiTypes",
        "importPath": "drf_spectacular.openapi",
        "description": "drf_spectacular.openapi",
        "isExtraImport": true,
        "detail": "drf_spectacular.openapi",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "Csv",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "isExtraImport": true,
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "SigninTokenObtainPairView",
        "importPath": "authentication.views",
        "description": "authentication.views",
        "isExtraImport": true,
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularRedocView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "NotFound",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "importPath": "users.views",
        "description": "users.views",
        "isExtraImport": true,
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "CreateUserSerializer",
        "importPath": "users.serializers",
        "description": "users.serializers",
        "isExtraImport": true,
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "ListUserSerializer",
        "importPath": "users.serializers",
        "description": "users.serializers",
        "isExtraImport": true,
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateUserSerializer",
        "importPath": "users.serializers",
        "description": "users.serializers",
        "isExtraImport": true,
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "authentication.apps",
        "description": "authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"authentication\"",
        "detail": "authentication.apps",
        "documentation": {}
    },
    {
        "label": "SigninSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class SigninSerializer(serializers.Serializer):\n    username = serializers.CharField(required=True, max_length=150)\n    password = serializers.CharField(required=True, write_only=True)",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "AuthenticateUserManagementTest",
        "kind": 6,
        "importPath": "authentication.tests",
        "description": "authentication.tests",
        "peekOfCode": "class AuthenticateUserManagementTest(TestCase):\n    def setUp(self):\n        self.client = APIClient()\n        self.user_data = {\n            \"username\": \"devtest\",\n            \"password\": \"dev123\"\n        }\n        self.user_create = {\n            \"username\": \"devtest\",\n            \"email\": \"devtest@gmail.com\",",
        "detail": "authentication.tests",
        "documentation": {}
    },
    {
        "label": "SigninTokenObtainPairView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class SigninTokenObtainPairView(APIView):\n    permission_classes = [AllowAny]\n    @extend_schema(\n        tags=[\"Autenticação de usuário\"],\n        operation_id=\"user_signin\",\n        description=\"Autentica um usuário usando seu nome de usuário e senha\",\n        request= SigninSerializer,\n        responses={\n            200: \"retorna o token de acesso e o refresh token!\",\n            401: \"usuário não autenticado\"",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "items.migrations.0001_initial",
        "description": "items.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Item\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "items.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "items.migrations.0002_item_name_item_price",
        "description": "items.migrations.0002_item_name_item_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"items\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"item\",\n            name=\"name\",\n            field=models.CharField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "items.migrations.0002_item_name_item_price",
        "documentation": {}
    },
    {
        "label": "ItemsConfig",
        "kind": 6,
        "importPath": "items.apps",
        "description": "items.apps",
        "peekOfCode": "class ItemsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"items\"",
        "detail": "items.apps",
        "documentation": {}
    },
    {
        "label": "Ite",
        "kind": 6,
        "importPath": "items.models",
        "description": "items.models",
        "peekOfCode": "class Item (models.Model):\n    name= models.CharField(max_length=100, null=True, blank=True) \n    price= models.FloatField(null=True, blank=True, default=0.0) \n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "items.models",
        "documentation": {}
    },
    {
        "label": "CreateItemSerialize",
        "kind": 6,
        "importPath": "items.serializers",
        "description": "items.serializers",
        "peekOfCode": "class CreateItemSerializer (serializers.ModelSerializer):\n    class Meta :\n        model = Item\n        fields = [\n            \"id\",\n            \"name\",\n            \"price\",\n            \"created_at\"\n        ]\nclass ListItemsSerializer (serializers.ModelSerializer):",
        "detail": "items.serializers",
        "documentation": {}
    },
    {
        "label": "ListItemsSerialize",
        "kind": 6,
        "importPath": "items.serializers",
        "description": "items.serializers",
        "peekOfCode": "class ListItemsSerializer (serializers.ModelSerializer):\n    class Meta :\n        model = Item\n        fields = [\n            \"id\",\n            \"name\",\n            \"price\",\n            \"created_at\"\n        ]\nclass UpdateItemSerializer (serializers.ModelSerializer):",
        "detail": "items.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateItemSerialize",
        "kind": 6,
        "importPath": "items.serializers",
        "description": "items.serializers",
        "peekOfCode": "class UpdateItemSerializer (serializers.ModelSerializer):\n    class Meta :\n        model = Item\n        fields = [\n            \"id\",\n            \"name\",\n            \"price\",\n            \"created_at\"\n        ]",
        "detail": "items.serializers",
        "documentation": {}
    },
    {
        "label": "ItemsTest",
        "kind": 6,
        "importPath": "items.tests",
        "description": "items.tests",
        "peekOfCode": "class ItemsTest(TestCase):\n    def setUp(self):\n        self.client = APIClient()\n        self.create_item = {\n            \"name\": \"caneta\",\n            \"price\": 10.0,\n        }\n        self.update_item = {\n            \"name\": \"caneta bic - azul\",\n            \"price\": 10.0,",
        "detail": "items.tests",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "items.urls",
        "description": "items.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'item', ItemViewSet, basename='item')\nurlpatterns = router.urls",
        "detail": "items.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "items.urls",
        "description": "items.urls",
        "peekOfCode": "urlpatterns = router.urls",
        "detail": "items.urls",
        "documentation": {}
    },
    {
        "label": "ItemViewSet",
        "kind": 6,
        "importPath": "items.views",
        "description": "items.views",
        "peekOfCode": "class ItemViewSet(viewsets.GenericViewSet):\n    queryset = Item.objects.all()\n    def get_serializer_class (self):\n        if self.action == 'create': \n            return CreateItemSerializer\n        elif self.action == 'partial_update':\n            return UpdateItemSerializer\n        return ListItemsSerializer\n    permission_classes = [IsAuthenticated]\n    @extend_schema(",
        "detail": "items.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "orders.migrations.0001_initial",
        "description": "orders.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"items\", \"0002_item_name_item_price\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Order\",\n            fields=[",
        "detail": "orders.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "OrdersConfig",
        "kind": 6,
        "importPath": "orders.apps",
        "description": "orders.apps",
        "peekOfCode": "class OrdersConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"orders\"",
        "detail": "orders.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "orders.models",
        "description": "orders.models",
        "peekOfCode": "class Order(models.Model):\n    user= models.ForeignKey(User, related_name='orders',on_delete=models.CASCADE)\n    items = models.ManyToManyField(Item, related_name='orders')\n    total = models.FloatField(default=0.0)\n    create_at = models.DateTimeField(auto_now_add=True)",
        "detail": "orders.models",
        "documentation": {}
    },
    {
        "label": "CreateOrderSerializer",
        "kind": 6,
        "importPath": "orders.serializers",
        "description": "orders.serializers",
        "peekOfCode": "class CreateOrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = [\n            \"id\",\n            \"user\",\n            \"items\",\n            \"total\",\n            \"create_at\"\n        ]",
        "detail": "orders.serializers",
        "documentation": {}
    },
    {
        "label": "ListOrderSerializer",
        "kind": 6,
        "importPath": "orders.serializers",
        "description": "orders.serializers",
        "peekOfCode": "class ListOrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = [\n            \"id\",\n            \"items\",\n            \"total\",\n            \"create_at\"\n        ]\n        read_only_fields = ['user']  ",
        "detail": "orders.serializers",
        "documentation": {}
    },
    {
        "label": "ListItemsInOrderSerializer",
        "kind": 6,
        "importPath": "orders.serializers",
        "description": "orders.serializers",
        "peekOfCode": "class ListItemsInOrderSerializer(serializers.ModelSerializer):\n    items = ListItemsSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = [\n            \"id\",\n            \"items\",\n            \"total\",    \n            \"create_at\"\n        ]",
        "detail": "orders.serializers",
        "documentation": {}
    },
    {
        "label": "OrdersTest",
        "kind": 6,
        "importPath": "orders.tests",
        "description": "orders.tests",
        "peekOfCode": "class OrdersTest(TestCase):\n    def setUp(self):\n        self.client = APIClient()\n        #corpo da requisição de criação do pedido, encaminhando o id dos items registrados\n        self.create_order = {\n            \"items\": [1]\n        }\n        self.create_item = {\n            \"name\": \"caneta\",\n            \"price\": 10.0,",
        "detail": "orders.tests",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "orders.urls",
        "description": "orders.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'order', OrderViewSet, basename='order')\nurlpatterns = router.urls",
        "detail": "orders.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "orders.urls",
        "description": "orders.urls",
        "peekOfCode": "urlpatterns = router.urls",
        "detail": "orders.urls",
        "documentation": {}
    },
    {
        "label": "OrderViewSet",
        "kind": 6,
        "importPath": "orders.views",
        "description": "orders.views",
        "peekOfCode": "class OrderViewSet(viewsets.GenericViewSet):\n    permission_classes = [IsAuthenticated]\n    def get_serializer_class(self):\n        if self.action =='create':\n            return CreateOrderSerializer\n        elif self.action == 'retrieve':\n            return ListItemsInOrderSerializer\n        return ListOrderSerializer\n    def get_queryset(self):\n        return Order.objects.filter(user=self.request.user)",
        "detail": "orders.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "setup.asgi",
        "description": "setup.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "setup.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# cast: transforma string de ambiente em boolean\n# default: caso configuração não seja definida ele será false\nDEBUG = config(\"DEBUG\", cast=bool, default=False)\n# cast: transforma string de ambiente em Csv para permissão de multiplos hosts",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "SECRET_KEY = config(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# cast: transforma string de ambiente em boolean\n# default: caso configuração não seja definida ele será false\nDEBUG = config(\"DEBUG\", cast=bool, default=False)\n# cast: transforma string de ambiente em Csv para permissão de multiplos hosts\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\n# Application definition\nINSTALLED_APPS = [\n    'drf_spectacular',",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "DEBUG = config(\"DEBUG\", cast=bool, default=False)\n# cast: transforma string de ambiente em Csv para permissão de multiplos hosts\nALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\n# Application definition\nINSTALLED_APPS = [\n    'drf_spectacular',\n    \"authentication\",\n    \"users\",\n    \"items\",\n    \"orders\",",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "ALLOWED_HOSTS = config(\"ALLOWED_HOSTS\", cast=Csv())\n# Application definition\nINSTALLED_APPS = [\n    'drf_spectacular',\n    \"authentication\",\n    \"users\",\n    \"items\",\n    \"orders\",\n    \"rest_framework_swagger\",\n    \"rest_framework_simplejwt\",",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'drf_spectacular',\n    \"authentication\",\n    \"users\",\n    \"items\",\n    \"orders\",\n    \"rest_framework_swagger\",\n    \"rest_framework_simplejwt\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"setup.urls\"",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "ROOT_URLCONF = \"setup.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "WSGI_APPLICATION = \"setup.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    \"default\": config(\n        \"DATABASE_URL\", default=f'sqlite:///{BASE_DIR / \"db.sqlite3\"}', cast=db_url\n    )\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": config(\n        \"DATABASE_URL\", default=f'sqlite:///{BASE_DIR / \"db.sqlite3\"}', cast=db_url\n    )\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "LANGUAGE_CODE = \"pt-BR\"\nTIME_ZONE = \"America/Sao_Paulo\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "TIME_ZONE = \"America/Sao_Paulo\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Gerenciamento de Pedidos API',",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Gerenciamento de Pedidos API',\n    'DESCRIPTION': 'Documentação completa de todas as rotas da API de gerenciamento de pedidos',",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Gerenciamento de Pedidos API',\n    'DESCRIPTION': 'Documentação completa de todas as rotas da API de gerenciamento de pedidos',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n    'SWAGGER_UI_SETTINGS': {",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Gerenciamento de Pedidos API',\n    'DESCRIPTION': 'Documentação completa de todas as rotas da API de gerenciamento de pedidos',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n    'SWAGGER_UI_SETTINGS': {\n        'deepLinking': True,\n    },\n    'COMPONENT_SPLIT_REQUEST': True,",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    'TITLE': 'Gerenciamento de Pedidos API',\n    'DESCRIPTION': 'Documentação completa de todas as rotas da API de gerenciamento de pedidos',\n    'VERSION': '1.0.0',\n    'SERVE_INCLUDE_SCHEMA': False,\n    'SWAGGER_UI_SETTINGS': {\n        'deepLinking': True,\n    },\n    'COMPONENT_SPLIT_REQUEST': True,\n    'SECURITY': [",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n}\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  \n    'REFRESH_TOKEN_LIFETIME': timedelta(hours=3)\n}",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  \n    'REFRESH_TOKEN_LIFETIME': timedelta(hours=3)\n}\nAUTH_USER_MODEL = 'users.User'",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "setup.settings",
        "description": "setup.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'",
        "detail": "setup.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "setup.urls",
        "description": "setup.urls",
        "peekOfCode": "urlpatterns = [\n   path(\"signin/\", SigninTokenObtainPairView.as_view(), name='signin'),\n   path(\"api/v1/\", include('users.urls')), \n   path(\"api/v1/\", include('items.urls')), \n   path(\"api/v1/\", include('orders.urls')), \n   # Documentação da API\n   path('api/schema/', SpectacularAPIView.as_view(), name='schema'),\n   path('api/schema/swagger-ui/', SpectacularSwaggerView.as_view(url_name='schema'), name='swagger-ui'),\n   path('api/schema/redoc/', SpectacularRedocView.as_view(url_name='schema'), name='redoc'),\n]",
        "detail": "setup.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "setup.wsgi",
        "description": "setup.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "setup.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0002_alter_user_created_at_alter_user_password_and_more",
        "description": "users.migrations.0002_alter_user_created_at_alter_user_password_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"users\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"user\",\n            name=\"created_at\",\n            field=models.DateTimeField(auto_now_add=True),\n        ),",
        "detail": "users.migrations.0002_alter_user_created_at_alter_user_password_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0003_user_groups_user_is_active_user_is_staff_and_more",
        "description": "users.migrations.0003_user_groups_user_is_active_user_is_staff_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n        (\"users\", \"0002_alter_user_created_at_alter_user_password_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"user\",\n            name=\"groups\",\n            field=models.ManyToManyField(",
        "detail": "users.migrations.0003_user_groups_user_is_active_user_is_staff_and_more",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"users\"",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class UserManager(BaseUserManager):\n    def create_user(self, username, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError('O endereço de email deve ser fornecido')\n        email = self.normalize_email(email)\n        user = self.model(username=username, email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n    def create_superuser(self, username, email, password=None, **extra_fields):",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    username = models.CharField(\n        max_length=255, \n        unique=True,\n    )\n    email = models.EmailField(\n        unique=True,\n    )\n    # unicidade do campo password pode ser prejudicial à saúde da api\n    # mas de qualquer forma cada senha é armazenada em banco com um hash diferente,",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "CreateUserSerialize",
        "kind": 6,
        "importPath": "users.serializers",
        "description": "users.serializers",
        "peekOfCode": "class CreateUserSerializer (serializers.ModelSerializer):\n    class Meta :\n        extra_kwargs={\n            \"password\": {'write_only': True}\n        }\n        model = User\n        fields = [\n            \"id\",\n            \"username\",\n            \"email\",",
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateUserSerialize",
        "kind": 6,
        "importPath": "users.serializers",
        "description": "users.serializers",
        "peekOfCode": "class UpdateUserSerializer (serializers.ModelSerializer):\n    class Meta :\n        extra_kwargs={\n            \"password\": {'write_only': True}\n        }\n        model = User\n        fields = [\n            \"username\",\n            \"email\",\n        ]",
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "ListUserSerialize",
        "kind": 6,
        "importPath": "users.serializers",
        "description": "users.serializers",
        "peekOfCode": "class ListUserSerializer (serializers.ModelSerializer):\n    class Meta :\n        model = User\n        fields = [\n            \"id\",\n            \"username\",\n            \"email\",\n            \"created_at\"\n        ]",
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "UserMagnamentTes",
        "kind": 6,
        "importPath": "users.tests",
        "description": "users.tests",
        "peekOfCode": "class UserMagnamentTest (TestCase):\n    def setUp(self):\n        self.client = APIClient()\n        self.user_data = {\n            \"username\": \"devtest\",\n            \"email\": \"devtest@gmail.com\",\n            \"password\": \"dev123\"\n        }\n    def test_create_user_username_email_unique(self):\n        \"\"\"\"",
        "detail": "users.tests",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "users.urls",
        "description": "users.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'user', UserViewSet, basename='user')\nurlpatterns = router.urls",
        "detail": "users.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "users.urls",
        "description": "users.urls",
        "peekOfCode": "urlpatterns = router.urls",
        "detail": "users.urls",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "kind": 6,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "class UserViewSet(viewsets.GenericViewSet):\n    queryset = User.objects.all()\n    def get_serializer_class(self):\n        if self.action == 'create':\n            return CreateUserSerializer\n        elif self.action == 'partial_update':\n            return UpdateUserSerializer\n        return ListUserSerializer\n    def get_permissions(self):\n        if self.action == 'create':",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"setup.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]